---
image:
  tag: v1.135.3

# TODO: move postgres out of this.
useDeprecatedPostgresChart: true

x-require-gpu: &require-gpu
  resources:
    requests:
      "gpu.intel.com/i915": "1"
    limits:
      "gpu.intel.com/i915": "1"

x-prefer-transcoding-nodes: &prefer-transcoding-nodes
  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          preference:
            matchExpressions:
              - key: media.transcoding.gpu
                operator: In
                values:
                  - fast
        - weight: 50
          preference:
            matchExpressions:
              - key: media.transcoding.gpu
                operator: In
                values:
                  - medium

x-only-fast-transcoding-nodes: &only-fast-transcoding-nodes
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: media.transcoding.gpu
                operator: In
                values:
                  - fast

# The PVCs are ReadWriteOnce, so we need to recreate the pods on eviction.
# The little downtime is acceptable, since Immich is used for personal stuff.
x-strategy-recreate: &strategy-recreate
  controller:
    strategy: Recreate

server:
  enabled: true
  <<: *require-gpu
  <<: *prefer-transcoding-nodes
  <<: *strategy-recreate
  service:
    main:
      type: LoadBalancer # Exposed to bypass the Ingress during heavy uploads.
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "acme"
      hosts:
        - host: photos2.ar3s3ru.dev
          paths:
            - path: "/"
      tls:
        - hosts: [photos2.ar3s3ru.dev]
          secretName: immich-tls

machine-learning:
  enabled: true
  <<: *require-gpu
  <<: *only-fast-transcoding-nodes
  <<: *strategy-recreate
  image:
    tag: v1.135.3-openvino
  resources: # Needed for hardware acceleration.
    requests:
      "gpu.intel.com/i915": "1"
    limits:
      "gpu.intel.com/i915": "1"
  env:
    TRANSFORMERS_CACHE: /cache
  persistence:
    cache: # To avoid downloading the ML models every start
      enabled: true
      type: pvc
      existingClaim: immich-ml-cache-v2

postgresql:
  enabled: true
  primary:
    service:
      annotations:
        tailscale.com/expose: "true"
    persistence:
      enabled: true
      existingClaim: immich-postgres

redis:
  enabled: true
  master:
    persistence:
      enabled: true
      existingClaim: immich-redis

immich:
  persistence:
    library:
      existingClaim: immich-library-v2
  metrics:
    enabled: true
  configuration:
    logging:
      enabled: true
      level: debug
    ffmpeg:
      accel: qsv
      accelDecode: true
      preset: slow
      targetResolution: original
      transcode: required
    oauth:
      enabled: true
      autoLaunch: true
      autoRegister: true
      buttonText: "Login with Authelia"
      clientId: immich
      issuerUrl: "https://auth.ar3s3ru.dev/.well-known/openid-configuration"
      mobileOverrideEnabled: false
      scope: "openid email profile"
      signingAlgorithm: "RS256"
      profileSigningAlgorithm: "none"
      storageLabelClaim: "preferred_username"
      storageQuotaClaim: "immich_quota"
