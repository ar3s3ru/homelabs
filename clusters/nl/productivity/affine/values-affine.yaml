# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.1.1/charts/other/app-template/values.schema.json
---
# NOTE: the Docker image for AFFiNE uses root:root for all files in its
# working directory, therefore we cannot use a non-root user for the main container.
#
# defaultPodOptions:
#   securityContext:
#     fsGroup: 1000
#     fsGroupChangePolicy: OnRootMismatch
#     runAsGroup: 1000
#     runAsUser: 1000

service:
  main:
    type: ClusterIP
    controller: main
    ports:
      http:
        port: &port-http 3010

ingress:
  main:
    enabled: true
    className: nginx
    hosts:
      - host: &public-hostname affine.ar3s3ru.dev
        paths:
          - path: "/"
            pathType: Prefix
            service:
              identifier: main
              port: http
    tls:
      - hosts: [affine.ar3s3ru.dev]
        secretName: affine-tls

  tailscale:
    enabled: true
    className: tailscale
    hosts:
      - host: &private-hostname affine-adm
        paths:
          - path: "/"
            pathType: Prefix
            service:
              identifier: main
              port: http
    tls:
      - hosts: [affine-adm]

controllers:
  main:
    type: deployment
    replicas: 1
    strategy: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0 # TODO: set to 1 when increasing the amount of replicas.
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        env:
          NODE_ENV: production
          AFFINE_SERVER_HOST: *private-hostname
          AFFINE_SERVER_PORT: *port-http
          AFFINE_SERVER_HTTPS: "false" # SSL termination done by Ingress.
          TELEMETRY_ENABLE: "false" # FIXME: enable for Prometheus at some point.
          REDIS_SERVER_HOST: affine-redis-master.productivity.svc.cluster.local
        image:
          repository: ghcr.io/toeverything/affine-graphql
          tag: stable # FIXME: should be set to a specific version
        command:
          - "sh"
          - "-c"
          # - "sleep infinity"
          - "node ./scripts/self-host-predeploy.js && node ./dist/main.js"
        probes:
          liveness: { enabled: false }
          readiness: { enabled: false }
          startup: { enabled: true }
# persistence:
#   config:
#     enabled: true
#     type: configMap
#     name: affine-config
#     globalMounts: [{ path: /root/.affine/config }]
